(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ 396:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./components/sidebar.vue?vue&type=template&id=025c3f31&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('aside',{staticClass:"sidebar",class:_vm.sidebar_class},[_c('div',{staticClass:"sidebar__inner"},[_c('div',{staticClass:"sidebar__content"},[_c('p',{staticClass:"sidebar__label sub-title"},[(_vm.cta_link)?_c('nuxt-link',{staticClass:"icon-link",attrs:{"to":_vm.cta_link}},[_c('span',{staticClass:"circular-icon circular-icon--arrow-right"},[_vm._v("‚üµ")]),_vm._v("\n\n                    "+_vm._s(_vm.label)+"\n                ")]):_vm._e(),_vm._v(" "),(!_vm.cta_link)?_c('span',[_vm._v(_vm._s(_vm.label))]):_vm._e()],1),_vm._v(" "),_c('h1',{staticClass:"sidebar__title"},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),_c('div',{staticClass:"sidebar__text styled-content"},[_c('p',{domProps:{"innerHTML":_vm._s(_vm.text)}})]),_vm._v(" "),(_vm.user.status === 'signedin')?_c('div',{staticClass:"sidebar-signin-info border-top-grey text-md padding-top-4 margin-top-4"},[_vm._m(0),_vm._v(" "),_c('p',{staticClass:"opacity-60 margin-top-1"},[_vm._v(_vm._s(_vm.user.data.emailaddress))]),_vm._v(" "),_c('p',{staticClass:"margin-top-1"},[_c('span',{staticClass:"text-sm text-link",attrs:{"id":"not-you"},on:{"click":function($event){return _vm.signUserOut();}}},[_vm._v("Not you?")])])]):_vm._e(),_vm._v(" "),(_vm.user.status !== 'signedin')?_c('button',{staticClass:"margin-top-4 button button--primary button--primary--pcolor-bright",on:{"click":function($event){return _vm.$store.commit('signin/toggleSigninModal', {show_modal: true})}}},[_vm._v("Sign In")]):_vm._e()])])])}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:"opacity-60"},[_c('strong',[_vm._v("Signed in as:")])])}]


// CONCATENATED MODULE: ./components/sidebar.vue?vue&type=template&id=025c3f31&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__(36);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(16);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(12);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__(26);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js
var vuex_esm = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./components/sidebar.vue?vue&type=script&lang=js&







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var sidebarvue_type_script_lang_js_ = ({
  props: {
    sidebar_class: '',
    label: '',
    title: {
      type: String
    },
    text: {
      type: String
    },
    cta_link: '',
    cta_text: ''
  },
  computed: _objectSpread({}, Object(vuex_esm["b" /* mapState */])({
    user: function user(state) {
      return state.localStorage.user;
    }
  })),
  data: function data() {
    return {
      isSelected: false
    };
  }
});
// CONCATENATED MODULE: ./components/sidebar.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_sidebarvue_type_script_lang_js_ = (sidebarvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(15);

// CONCATENATED MODULE: ./components/sidebar.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  components_sidebarvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var sidebar = __webpack_exports__["a"] = (component.exports);

/***/ }),

/***/ 397:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./components/header.vue?vue&type=template&id=6fadba92&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"header",class:_vm.mobileMenu ? 'header--mobile-menu' : ''},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"header__bottom"},[_c('div',{staticClass:"header__bottom__inner wrapper"},[_c('div',{staticClass:"header__bottom__left"},[_c('nuxt-link',{attrs:{"to":'/',"id":"home"}},[_c('img',{attrs:{"src":"https://pubs.acs.org/pb-assets/images/preference-center/controls.svg","alt":"Preference Center icon"}}),_vm._v(" "),_c('strong',[_vm._v("Email")]),_vm._v(" Preference center\n                ")])],1),_vm._v(" "),_c('div',{staticClass:"header__bottom__right",attrs:{"id":_vm.user.status === 'signedin' ? 'sign-out' : 'sign-in'},on:{"click":function($event){return _vm.signInOut()}}},[_c('span',{attrs:{"role":"button"}},[_vm._v("\n                    Sign "+_vm._s(_vm.user.status === 'signedin' ? 'out' : 'in')+"\n                    "),_c('img',{attrs:{"src":"https://pubs.acs.org/pb-assets/images/preference-center/signout-white.svg","alt":"Sign out icon"}})])]),_vm._v(" "),_c('div',{staticClass:"header__bottom__burger",on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('span',{staticClass:"header__bottom__burger__text"},[_vm._v("Menu")]),_vm._v(" "),_vm._m(1)])])]),_vm._v(" "),_c('div',{staticClass:"tabs",attrs:{"id":"main-navigation"}},[_c('ul',{staticClass:"tabs__list wrapper"},[_c('li',{staticClass:"tab",attrs:{"id":"recommendations-tab"},on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('nuxt-link',{class:_vm.activeNav === 'recommendations' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","to":"/","exact":""}},[_vm._v("\n                    Recommendations\n                ")])],1),_vm._v(" "),_c('li',{staticClass:"tab",on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('nuxt-link',{class:_vm.activeNav === 'interests' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","to":"/interests"}},[_vm._v("\n                    Interests\n                ")])],1),_vm._v(" "),_c('li',{staticClass:"tab",on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('nuxt-link',{class:_vm.activeNav === 'journals' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","to":"/journals"}},[_vm._v("\n                    Journals\n                ")])],1),_vm._v(" "),_c('li',{staticClass:"tab",on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('nuxt-link',{class:_vm.activeNav === 'newsletters' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","to":"/newsletters"}},[_vm._v("\n                    Newsletters\n                ")])],1),_vm._v(" "),_c('li',{staticClass:"tab",on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('nuxt-link',{class:_vm.activeNav === 'searches-citations' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","to":"/searches-citations"}},[_vm._v("\n                    Search & Citations\n                ")])],1),_vm._v(" "),(_vm.user.status === 'signedin')?_c('li',{staticClass:"tab",on:{"click":function($event){return _vm.toggleMobileMenu()}}},[_c('nuxt-link',{class:_vm.activeNav === 'profile' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","to":"/profile"}},[_vm._v("\n                    Profile Settings\n                ")])],1):_vm._e(),_vm._v(" "),(_vm.user.status !== 'signedin')?_c('li',{staticClass:"tab",attrs:{"role":"button"},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }_vm.toggleMobileMenu(); _vm.$store.commit('signin/toggleSigninModal', {show_modal: true})},"click":function($event){_vm.toggleMobileMenu(); _vm.$store.commit('signin/toggleSigninModal', {show_modal: true})}}},[_c('span',{class:_vm.activeNav === 'profile' ? 'nuxt-link-active' : '',attrs:{"tabindex":"0","role":""}},[_vm._v("\n                    Profile Settings\n                ")])]):_vm._e(),_vm._v(" "),_c('li',{staticClass:"tab tab--mobile"},[_c('span',{staticClass:"color-pcolor-bright",attrs:{"id":_vm.user.status === 'signedin' ? 'sign-out' : 'sign-in'},on:{"click":function($event){return _vm.signInOut()}}},[_vm._v("\n                    Sign "+_vm._s(_vm.user.status === 'signedin' ? 'out' : 'in')+"\n                    "),_c('img',{attrs:{"src":"https://pubs.acs.org/pb-assets/images/preference-center/signout-pcolor-bright.svg","alt":"Sign out icon"}})])])])])])}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"header__top"},[_c('div',{staticClass:"wrapper"},[_c('div',{staticClass:"header__logo",attrs:{"itemscope":"","itemtype":"http://schema.org/Organization"}},[_c('a',{attrs:{"href":"https://pubs.acs.org","itemprop":"url"}},[_c('img',{attrs:{"src":"https://pubs.acs.org/pb-assets/images/preference-center/acs-logo.svg","alt":"ACS Logo"}})])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"header__bottom__burger__icon"},[_c('span'),_vm._v(" "),_c('span')])}]


// CONCATENATED MODULE: ./components/header.vue?vue&type=template&id=6fadba92&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__(36);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(16);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(12);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__(26);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js
var vuex_esm = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./components/header.vue?vue&type=script&lang=js&







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var headervue_type_script_lang_js_ = ({
  methods: {
    toggleMobileMenu: function toggleMobileMenu() {
      this.mobileMenu = !this.mobileMenu;
    },
    signInOut: function signInOut() {
      if (this.$store.state.localStorage.user.status === 'signedin') {
        this.signUserOut();
      } else {
        this.$store.commit('signin/toggleSigninModal', {
          show_modal: true
        });
      }
    }
  },
  props: {
    activeNav: ''
  },
  data: function data() {
    return {
      mobileMenu: false
    };
  },
  computed: _objectSpread({}, Object(vuex_esm["b" /* mapState */])({
    user: function user(state) {
      return state.localStorage.user;
    }
  }))
});
// CONCATENATED MODULE: ./components/header.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_headervue_type_script_lang_js_ = (headervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(15);

// CONCATENATED MODULE: ./components/header.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  components_headervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var header = __webpack_exports__["a"] = (component.exports);

/***/ }),

/***/ 398:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./components/footer.vue?vue&type=template&id=556e8428&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',{staticClass:"footer"},[_c('p',[_vm._v("Copyright ¬© 2020 American Chemical Society | 1155 Sixteenth Street NW | Washington, DC 20036 | "),_c('a',{attrs:{"href":"https://www.acs.org/content/acs/en/privacy.html","target":"_blank"}},[_vm._v("ACS Privacy Policy")])])])}]


// CONCATENATED MODULE: ./components/footer.vue?vue&type=template&id=556e8428&

// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(15);

// CONCATENATED MODULE: ./components/footer.vue

var script = {}


/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  script,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var footer = __webpack_exports__["a"] = (component.exports);

/***/ }),

/***/ 402:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./components/editable-field.vue?vue&type=template&id=69b7bebe&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"listing",class:[
        _vm.default_active || _vm.is_active ? 'listing--active' : 'listing--deactive',
        _vm.fields ? 'listing--has-fields' : '',
        _vm.default_active ? 'listing--active--default' : ''
    ]},[_c('div',{staticClass:"listing__inner"},[_c('div',{staticClass:"listing__content"},[(_vm.title)?_c('h6',{staticClass:"listing__title",domProps:{"innerHTML":_vm._s(_vm.title)}}):_vm._e(),_vm._v(" "),(_vm.text)?_c('p',{staticClass:"listing__text",domProps:{"innerHTML":_vm._s(_vm.text)}}):_vm._e(),_vm._v(" "),(_vm.fields)?_c('div',{staticClass:"listing__fields"},_vm._l((_vm.fields),function(field,index){return (field.type === 'input' || field.type === 'select' || field.type === 'multiselect' || field.type === 'typeahead')?_c('div',{staticClass:"listing__fields__item",class:!field.value ? 'listing__fields__item--empty-field' : ''},[(field.type === 'input')?_c('input',{ref:index === 0 ? 'first_input' : '',refInFor:true,staticClass:"input",class:!field.value ? 'field--empty' : '',attrs:{"name":field.name,"id":field.name,"type":field.type,"disabled":!_vm.default_active && !_vm.is_active,"required":_vm.required},domProps:{"value":field.value},on:{"keyup":function($event){_vm.resizeField($event.target); _vm.addEmptyFieldClass($event.target); _vm.updateFieldsProp(index, $event.target);}}}):_vm._e(),_vm._v(" "),(field.type === 'typeahead')?_c('div',{staticClass:"typeahead"},[(_vm.is_active)?_c('input',{ref:"typeahead_input",refInFor:true,staticClass:"input",class:!field.value ? 'field--empty' : '',attrs:{"autocomplete":"off","name":field.name,"disabled":!_vm.default_active && !_vm.is_active,"id":field.name,"type":"text","required":_vm.required},on:{"keyup":function($event){return _vm.filterTypeaheadOptions($event.target, field, $event)}}}):_vm._e(),_vm._v(" "),(!_vm.is_active && (_vm.active_typeahead_option || field.value))?_c('div',{domProps:{"innerHTML":_vm._s(_vm.active_typeahead_option ? _vm.active_typeahead_option : field.value)}}):_vm._e(),_vm._v(" "),_c('label',{staticClass:"placeholder-label",attrs:{"for":field.name}},[_vm._v(_vm._s(field.placeholder))]),_vm._v(" "),_c('ul',{ref:"typeahead_list",refInFor:true,staticClass:"typeahead__list"},_vm._l((_vm.typeahead_options),function(option){return _c('li',{staticClass:"typeahead__list__option",attrs:{"data-option-id":option.id,"data-option-name":option.name},on:{"click":function($event){_vm.selectTypeaheadOption($event.target, field); _vm.saveFields($event);}}},[_vm._v("\n                                "+_vm._s(option.name)+"\n                            ")])}),0)]):_vm._e(),_vm._v(" "),(field.type === 'select')?_c('select',{staticClass:"select",class:!field.value ? 'field--empty' : '',attrs:{"name":field.name,"id":field.name,"disabled":!_vm.default_active && !_vm.is_active},on:{"change":function($event){_vm.updateFieldsProp(index, $event.target); _vm.addEmptyFieldClass($event.target); _vm.resizeField($event.target);}}},[_c('option',{attrs:{"value":""}},[_vm._v("Choose "+_vm._s(field.blank_option ? field.blank_option : _vm.title.toLowerCase()))]),_vm._v(" "),_vm._l((field.options),function(option){return _c('option',{domProps:{"value":option.value,"selected":field.value === option.value}},[_vm._v(_vm._s(option.label))])})],2):_vm._e(),_vm._v(" "),(field.type === 'multiselect')?_c('div',{staticClass:"select select--multi",attrs:{"tabindex":"1","name":field.name,"id":field.name}},[_c('div',{staticClass:"select--multi__label"},[_c('span',{staticClass:"select--multi__count"},[_vm._v(_vm._s(_vm.options_selected_values.length))]),_vm._v(" "),_c('span',{staticClass:"select--multi__label__text"},[(!_vm.options_selected_labels.length)?_c('span',[_vm._v("Select all that apply")]):_vm._e(),_vm._v(" "),(_vm.options_selected_labels.length)?_c('span',_vm._l((_vm.options_selected_labels),function(options_selected_label,index){return _c('span',{staticClass:"select--multi__label__text__item"},[(index !== 0)?_c('span',[_vm._v(", ")]):_vm._e(),_vm._v(_vm._s(options_selected_label)+"\n                                    ")])}),0):_vm._e()])]),_vm._v(" "),_c('ul',{staticClass:"select--multi__list"},_vm._l((field.options),function(option){return _c('li',{staticClass:"select--multi__list__option",class:_vm.user.data[option.value] == 1 ? 'select--multi__list__option--active' : '',attrs:{"data-value":option.value},on:{"click":function($event){return _vm.selectMultiselectOption($event.target)}}},[_vm._v("\n                                "+_vm._s(option.label)+"\n                            ")])}),0)]):_vm._e(),_vm._v(" "),(field.type === 'input')?_c('label',{staticClass:"placeholder-label",attrs:{"for":field.name}},[_vm._v(_vm._s(field.placeholder))]):_vm._e(),_vm._v(" "),_c('span',{staticClass:"listing__fields__item__text",attrs:{"id":field.name + '_text'}})]):_vm._e()}),0):_vm._e(),_vm._v(" "),(_vm.field_type === 'radio')?_c('div',{staticClass:"listing__fields"},[_c('ul',{staticClass:"radio-control"},_vm._l((_vm.options),function(option){return _c('li',{staticClass:"radio-control__item",class:[_vm.radio_field_value == option.value ? 'radio-control__item--active' : ''],on:{"click":function($event){return _vm.setRadioField(option.value);}}},[_vm._v("\n                        "+_vm._s(option.label)+"\n                    ")])}),0)]):_vm._e(),_vm._v(" "),(_vm.field_type !== 'multiselect' && !_vm.default_active && !_vm.is_active && !_vm.anyFieldContainsValue() && _vm.fields)?_c('p',{staticClass:"listing__placeholder",domProps:{"innerHTML":_vm._s('Add your ' + _vm.title.toLowerCase())}}):_vm._e(),_vm._v(" "),(_vm.field_type === 'multiselect' && !_vm.default_active && !_vm.is_active)?_c('p',{staticClass:"listing__placeholder"},_vm._l((_vm.options_selected_labels),function(options_selected_label,index){return _c('span',{staticClass:"listing__placeholder__item"},[(index !== 0)?_c('span',[_vm._v(", ")]):_vm._e(),_vm._v(_vm._s(options_selected_label)+"\n                ")])}),0):_vm._e(),_vm._v(" "),(_vm.sub_text)?_c('p',{staticClass:"listing__subtext",domProps:{"innerHTML":_vm._s(_vm.sub_text)}}):_vm._e()]),_vm._v(" "),(_vm.field_type === 'checkbox')?_c('div',{staticClass:"listing__checkbox checkboxes"},[_c('div',{staticClass:"checkbox__field"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","name":_vm.field_name,"value":"1","id":_vm.is_active || _vm.default_active ? _vm.field_name + '-active' : _vm.field_name + '-inactive'},on:{"click":function($event){_vm.activateField(); _vm.checkboxActive($event.target)}}})])]):_vm._e(),_vm._v(" "),(_vm.fields || _vm.field_type === 'select' || (_vm.field_type === 'radio' && !_vm.default_active))?_c('div',{staticClass:"listing__cta"},[(_vm.default_active || _vm.is_active)?_c('button',{staticClass:"listing__cta__button",attrs:{"id":_vm.radio_field_value === 0 ? _vm.media_type + '-unfollow' : 'save-info'},domProps:{"innerHTML":_vm._s(_vm.radio_field_value === 0 && _vm.media_type === 'saved-search' ? 'Save and Unfollow' : 'Save')},on:{"click":function($event){return _vm.saveFields($event);}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"listing__cta__button",attrs:{"role":"button","id":!_vm.default_active && !_vm.is_active ? (_vm.anyFieldContainsValue() ? 'edit-info' : 'add-info') : ''},domProps:{"innerHTML":_vm._s(_vm.default_active || _vm.is_active ? 'Cancel' : (_vm.anyFieldContainsValue() || (_vm.options_selected_values && _vm.options_selected_values.length) ? 'Edit' : 'Add'))},on:{"click":function($event){_vm.activateField(); _vm.focusOnFirstField();}}})]):_vm._e(),_vm._v(" "),(_vm.field_type === 'switch')?_c('div',{staticClass:"listing__cta"},[_c('label',{staticClass:"switch-field",class:_vm.reverse_switch_field_default ? (_vm.switch_field_value !== '0' && _vm.switch_field_value !== 0 ? 'switch-field--active' : '') : (_vm.switch_field_value >= 1 ? 'switch-field--active' : '')},[_c('input',{attrs:{"type":"checkbox","name":_vm.field_name,"value":"1","id":_vm.field_name},domProps:{"checked":_vm.reverse_switch_field_default ? (_vm.switch_field_value !== '0' && _vm.switch_field_value !== 0) : (_vm.switch_field_value >= 1)},on:{"change":function($event){return _vm.setSwitchField($event.target)}}}),_vm._v(" "),_c('div',{staticClass:"switch-field__button",attrs:{"id":_vm.reverse_switch_field_default ? (_vm.switch_field_value !== '0' && _vm.switch_field_value !== 0 ? _vm.field_name + '-active' : _vm.field_name + '-inactive') : (_vm.switch_field_value >= 1 ? _vm.field_name + '-active' : _vm.field_name + '-inactive')}})])]):_vm._e()])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./components/editable-field.vue?vue&type=template&id=69b7bebe&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__(28);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__(30);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__(29);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__(36);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(16);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(12);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__(26);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__(39);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__(54);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__(22);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__(23);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__(19);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js
var vuex_esm = __webpack_require__(7);

// EXTERNAL MODULE: ./node_modules/axios/index.js
var axios = __webpack_require__(8);
var axios_default = /*#__PURE__*/__webpack_require__.n(axios);

// EXTERNAL MODULE: ./assets/config.js
var config = __webpack_require__(31);
var config_default = /*#__PURE__*/__webpack_require__.n(config);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./components/editable-field.vue?vue&type=script&lang=js&















function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var editable_fieldvue_type_script_lang_js_ = ({
  computed: _objectSpread(_objectSpread({}, Object(vuex_esm["b" /* mapState */])({
    user: function user(state) {
      return state.localStorage.user;
    }
  })), {}, {
    eloqua: function eloqua() {
      return this.$store.state.localStorage.eloqua;
    }
  }),
  mounted: function mounted() {
    if (this.fields) {
      var _iterator = _createForOfIteratorHelper(this.fields),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var fieldName = _step.value;

          if ((fieldName.type === 'input' || fieldName.type === 'select' || fieldName.type === 'typeahead') && fieldName.value) {
            var field = document.getElementById(fieldName.name);
            this.resizeField(field);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  },
  props: {
    //Disable this for forms where a button is clicked to save data
    auto_update_data: {
      default: true
    },
    //Is this field active by default (fields show without having to click a button)
    default_active: false,
    //Is this field a required field
    required: {
      default: true
    },
    //The media type...e.g. saved search, citation etc
    media_type: '',
    //The id of the media item
    media_id: '',
    title: {
      type: String
    },
    text: '',
    sub_text: '',
    value: '',
    field_type: '',
    field_title: '',
    field_name: '',
    fields: {
      type: Array
    },
    options: {
      type: Array
    },
    options_selected_values: {
      type: Array
    },
    options_selected_labels: {
      type: Array
    },
    //Set this to reverse the default switch field state
    reverse_switch_field_default: false
  },
  methods: {
    //Toggle is_active data
    activateField: function activateField() {
      this.is_active = !this.is_active;
    },
    //Emit whether the checkbox is active or not
    checkboxActive: function checkboxActive(checkbox) {
      this.$emit('checkboxClicked', this.field_name, checkbox.checked);
    },
    //Check if any field contains a value, used to show placeholder text if not
    anyFieldContainsValue: function anyFieldContainsValue() {
      if (this.fields) {
        var fieldValue = '';

        var _iterator2 = _createForOfIteratorHelper(this.fields),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var fieldName = _step2.value;

            if ((fieldName.type === 'input' || fieldName.type === 'typeahead' || fieldName.type === 'select') && fieldName.value) {
              fieldValue += '1';
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        if (fieldValue) {
          return true;
        }
      } else if (this.field_type) {
        switch (this.field_type) {
          case 'radio':
            {
              if (this.value) {
                return true;
              }
            }
        }
      }
    },
    //Focus on the first field when user clicks edit/add button
    focusOnFirstField: function focusOnFirstField() {
      var _this = this;

      setTimeout(function () {
        if (_this.$refs.first_input) {
          _this.$refs.first_input[0].focus();
        }
      }, 100);
    },
    //Resize field size on load/focus of input
    resizeField: function resizeField(field) {
      if (field && document.getElementById(field.id + '_text')) {
        //Set the span html to the input value, so the width is right to set that as the width of the input
        document.getElementById(field.id + '_text').innerHTML = this.active_typeahead_option ? this.active_typeahead_option : field.value; //Get the width of the span

        var textSpanWidth = Math.round(document.getElementById(field.id + '_text').getBoundingClientRect().width); //Set the input to that width

        field.style.width = textSpanWidth + 'px';
      }
    },
    //Post data to Eloqua and update local storage data
    saveFields: function saveFields(event) {
      if (event) event.preventDefault(); //If a media type is passed, run specific code dependant on that (e.g. saved searches/citations will update certain local storage/Eloqua data)

      if (this.media_type) {
        switch (this.media_type) {
          case "saved-search":
            {
              if (this.media_id) {
                var eloquaPostParameters = 'elqFormName=' + this.eloqua.formname + '&elqSiteId=' + this.eloqua.siteid + '&emailAddress=' + this.$store.state.localStorage.user.data.emailaddress;
                eloquaPostParameters += '&search_id_1=' + this.media_id;
                eloquaPostParameters += '&search_freq_1=' + this.radio_field_value; //If the value is set to 0, remove it from local storage

                if (this.radio_field_value === 0) {
                  this.$store.commit('localStorage/unfollowUserSavedSearch', {
                    "alert_code": this.media_id.toString(),
                    "frequency": this.radio_field_value.toString()
                  });
                } //else update frequency in local storage
                else {
                    this.$store.commit('localStorage/updateUserSavedSearchData', {
                      "alert_code": this.media_id.toString(),
                      "frequency": this.radio_field_value.toString()
                    });
                  }

                console.log(eloquaPostParameters); //Post data to Eloqua

                axios_default.a.post(this.eloqua.formaction + '?' + eloquaPostParameters).then(function (response) {}).catch(function (error) {});
              }

              break;
            }
        }
      } else {
        if (this.auto_update_data) {
          var data = {},
              _eloquaPostParameters = 'elqFormName=' + this.eloqua.formname + '&elqSiteId=' + this.eloqua.siteid + '&emailAddress=' + this.$store.state.localStorage.user.data.emailaddress; //If this is a mutiselect, append all selected options to eloquaPostParameters to post to Eloqua and add to local storage


          if (this.field_type === 'multiselect') {
            //Loop through fields
            var _iterator3 = _createForOfIteratorHelper(this.fields),
                _step3;

            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var field = _step3.value;

                //Loop through options for this field
                var _iterator4 = _createForOfIteratorHelper(field.options),
                    _step4;

                try {
                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                    var option = _step4.value;

                    //if this option is in the options selected prop (options selected by the user), set it to 1 when posting to Eloqua and adding to local storage...else set it to 0
                    if (this.options_selected_values.includes(option.value)) {
                      _eloquaPostParameters += '&' + option.value + '=1';
                      data[option.value] = 1;
                    } else {
                      _eloquaPostParameters += '&' + option.value + '=0';
                      data[option.value] = 0;
                    }
                  }
                } catch (err) {
                  _iterator4.e(err);
                } finally {
                  _iterator4.f();
                }
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          } //Else post select/input options to Eloqua and local storage
          else {
              //Build up data object with field names and values
              var _iterator5 = _createForOfIteratorHelper(this.fields),
                  _step5;

              try {
                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                  var _field = _step5.value;

                  //If this field is a typeahead and the user selected a typeahead option, set the value to the active typeahead option rather than the field value...else set it to the field value
                  if (_field.type === 'typeahead' && this.active_typeahead_option) {
                    _eloquaPostParameters += '&' + _field.name + '=' + this.active_typeahead_option;
                    data[_field.name] = this.active_typeahead_option; //If this is the company typeahead and an active typeahead option id exists, post that to eloqua too

                    if (_field.name === 'company' && this.active_typeahead_option_id) {
                      _eloquaPostParameters += '&orgid=' + this.active_typeahead_option_id;
                    }
                  } else {
                    _eloquaPostParameters += '&' + _field.name + '=' + _field.value;
                    data[_field.name] = _field.value;
                  }
                }
              } catch (err) {
                _iterator5.e(err);
              } finally {
                _iterator5.f();
              }
            } //Update users data in local storage


          this.$store.commit('localStorage/updateUserData', data);
          console.log(_eloquaPostParameters); //Post data to Eloqua

          axios_default.a.post(this.eloqua.formaction + '?' + _eloquaPostParameters).then(function (response) {}).catch(function (error) {});
        }
      } //Set field to inactive


      this.is_active = false;
    },
    //Set value data, used for radio buttons
    setRadioField: function setRadioField(option) {
      this.radio_field_value = option;
      var data = {},
          eloquaPostParameters = 'elqFormName=' + this.eloqua.formname + '&elqSiteId=' + this.eloqua.siteid + '&emailAddress=' + this.$store.state.localStorage.user.data.emailaddress;
      eloquaPostParameters += '&' + this.field_name + '=' + this.radio_field_value;
      data[this.field_name] = this.radio_field_value; //Update users data in local storage

      this.$store.commit('localStorage/updateUserData', data);

      if (this.auto_update_data) {
        console.log(eloquaPostParameters); //Post data to Eloqua

        axios_default.a.post(this.eloqua.formaction + '?' + eloquaPostParameters).then(function (response) {//console.log(response);
        }).catch(function (error) {//console.log(error);
        });
      }
    },
    //Set Eloqua/local storage on click of a switch field
    setSwitchField: function setSwitchField(field) {
      //Set value to the option the user has selected
      this.switch_field_value = !this.switch_field_value; //Set value when user checks/un-checks field

      this.switch_field_value = this.switch_field_value ? 1 : 0;
      var data = {},
          eloquaPostParameters = 'elqFormName=' + this.eloqua.formname + '&elqSiteId=' + this.eloqua.siteid + '&emailAddress=' + this.$store.state.localStorage.user.data.emailaddress;
      eloquaPostParameters += '&' + this.field_name + '=' + this.switch_field_value;
      data[this.field_name] = this.switch_field_value; //Update users data in local storage

      this.$store.commit('localStorage/updateUserData', data);

      if (this.auto_update_data) {
        console.log(eloquaPostParameters); //Post data to Eloqua

        axios_default.a.post(this.eloqua.formaction + '?' + eloquaPostParameters).then(function (response) {//console.log(response);
        }).catch(function (error) {//console.log(error);
        });
      }
    },
    //Add multiselect option to input when selected, and show it in the multiselect
    selectMultiselectOption: function selectMultiselectOption(option) {
      //If listing is active
      if (this.is_active) {
        if (!option.classList.contains('select--multi__list__option--active')) {
          //add to options_selected props
          this.options_selected_values.push(option.getAttribute('data-value'));
          this.options_selected_labels.push(option.innerHTML); //add active class

          option.classList.add('select--multi__list__option--active');
        } else {
          //remove from options_selected props
          this.options_selected_values.pop(option.getAttribute('data-value'));
          this.options_selected_labels.pop(option.innerHTML); //remove active class

          option.classList.remove('select--multi__list__option--active');
        }
      }
    },
    //Add a class to a field if the value is empty
    addEmptyFieldClass: function addEmptyFieldClass(field) {
      if (!field.value) {
        field.classList.add('field--empty');
      } else {
        field.classList.remove('field--empty');
      }
    },
    filterTypeaheadOptions: function filterTypeaheadOptions(element, field, event) {
      var _this2 = this;

      if (this.typeahead_timeout) {
        clearTimeout(this.typeahead_timeout);
      } //Set a timeout for finding the typeahead options matching the users search


      this.typeahead_timeout = setTimeout(function () {
        _this2.active_typeahead_option = element.value; //Search organizations in endpoint for organization field

        if (field.name === 'company') {
          if (_this2.active_typeahead_option) {
            axios_default.a.get(config_default.a.api_endpoints.organization_options + '?input=' + _this2.active_typeahead_option).then(function (response) {
              var organizations = [];

              var _iterator6 = _createForOfIteratorHelper(response.data),
                  _step6;

              try {
                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                  var organization = _step6.value;
                  organizations.push({
                    id: organization.acsOrgId,
                    name: organization.orgNm
                  });
                }
              } catch (err) {
                _iterator6.e(err);
              } finally {
                _iterator6.f();
              }

              _this2.typeahead_options = organizations;
            });
          }
        } //Show/hide relevant typeahead options


        if (_this2.active_typeahead_option.length > 2) {
          _this2.$refs.typeahead_list[0].classList.add('typeahead__list--active');

          var typeaheadOptions = document.querySelectorAll('.typeahead__list__option');

          var _iterator7 = _createForOfIteratorHelper(typeaheadOptions),
              _step7;

          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
              var typeaheadOption = _step7.value;
              typeaheadOption.classList.remove('hidden'); // if(typeaheadOption.getAttribute('data-option-name').toLowerCase().includes(this.active_typeahead_option.toLowerCase()))
              // {
              //     //console.log(typeaheadOption.getAttribute('data-option-name').toLowerCase() + ' contains ' + this.active_typeahead_option.toLowerCase());
              //     typeaheadOption.classList.remove('hidden');
              // }
              // else
              // {
              //console.log(typeaheadOption.getAttribute('data-option-name').toLowerCase() + ' doesnt contains ' + this.active_typeahead_option.toLowerCase());
              //typeaheadOption.classList.add('hidden');
              // }
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
        } //Else show all again
        else {
            _this2.$refs.typeahead_list[0].classList.remove('typeahead__list--active'); //Get all sub options


            var _typeaheadOptions = document.querySelectorAll('.typeahead__list__option'); //Loop through all sub options and show them again


            var _iterator8 = _createForOfIteratorHelper(_typeaheadOptions),
                _step8;

            try {
              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                var _typeaheadOption = _step8.value;

                _typeaheadOption.classList.add('hidden');
              }
            } catch (err) {
              _iterator8.e(err);
            } finally {
              _iterator8.f();
            }
          }

        if (event.key === "Escape") {
          _this2.$refs.typeahead_list[0].classList.remove('typeahead__list--active');
        }
      }, this.typeahead_delay);
    },
    selectTypeaheadOption: function selectTypeaheadOption(element, field) {
      this.$refs.typeahead_list[0].classList.remove('typeahead__list--active');
      this.active_typeahead_option = element.getAttribute('data-option-name');
      this.active_typeahead_option_id = element.getAttribute('data-option-id');
      this.is_active = false;
    },
    //Update the value of the prop for the current field on keyup
    updateFieldsProp: function updateFieldsProp(index, field) {
      this.fields[index].value = field.value;
    }
  },
  data: function data() {
    return {
      typeahead_options: [],
      active_typeahead_option: '',
      active_typeahead_option_id: '',
      is_active: false,
      switch_field_value: this.value,
      radio_field_value: this.value,
      typeahead_timeout: '',
      typeahead_delay: 500
    };
  }
});
// CONCATENATED MODULE: ./components/editable-field.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_editable_fieldvue_type_script_lang_js_ = (editable_fieldvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(15);

// CONCATENATED MODULE: ./components/editable-field.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  components_editable_fieldvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var editable_field = __webpack_exports__["a"] = (component.exports);

/***/ })

}]);